# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: CodeQL and terraform
on:
  push:
    branches:
      - main1
env:
  AZURE_RESOURCE_NAME: 'example-resources'
  AZURE_WEBAPP_NAME: 'example-app-service-tf' 
  AZURE_WEBAPP_PACKAGE_PATH: .
  PATH_TO_SOLUTION: MySampleWebApp/MySampleWebApp.sln
  PATH_TO_PROJ: MySampleWebAppTests1/MySampleWebAppTests1.csproj


jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
          
            
    
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        include-prerelease: false
    
    - name: Build with dotnet
      run: dotnet build ${{ env.PATH_TO_SOLUTION }} --configuration Release

    - name: Test
      run:  |
        dotnet test ${{ env.PATH_TO_PROJ }}  --settings coverlet.runsettings --logger:trx    
        dotnet test ${{ env.PATH_TO_PROJ }}  /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
            
    - name: dotnet publish
      run: dotnet publish ${{ env.PATH_TO_SOLUTION }} -c Release -o ${{env.DOTNET_ROOT}}/myapp
    
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp

  codeQL:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
        
        
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    env:
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan
        
      - name: Terraform Apply
        run: terraform apply --auto-approve


  deploy:
    runs-on: ubuntu-latest
    needs: [ build ,terraform ] 
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app

    - name: Get WebApp/FunctionApp publish profile
      id: webapp
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ env.AZURE_RESOURCE_NAME }} 
        appName: ${{ env.AZURE_WEBAPP_NAME }}

    
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ steps.webapp.outputs.profile }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
